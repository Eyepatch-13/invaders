pub struct Shot {
	pub x: usize,
	pub y: usize,
	pub exploding: bool,
	timer: Timer,
}

impl Shot {
	pub fn new (x: usize, y: usize) -> Self {
		Self {
			x,
			y,
			exploding: false,
			timer: Timer::from_millis(50),
		}
	}

	pub fn update(&mut self, delta: Duration) {
		self.timer.update(delta);
		if self.timer_ready && !self.exploding {
			if self.y > 0{
				self.y -= 1;
			}
			self.timer.reset();
		}
	}

	pub fn explode(&mut self) {
		self.timer = Timer::from_millis(250);
	}

	pub fn dead(&self) -> bool {
		(self.exploding && self.timer.ready) || (self.)
	}
}